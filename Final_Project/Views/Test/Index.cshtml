@model PL.Models.TestAnswerViewModel
@{




    @Html.AntiForgeryToken()

<div class="TestMain" style="border-radius:15px; padding:2%; background-image: linear-gradient(to bottom,LightBlue 0%,#fff 100%);">

    <h2 style="color:green;">Test  Started</h2>
    <h2 id="countdown" style="position:fixed;margin-left:50%;"></h2>
    <hr />


    <div class=" TestMain"></div>
    <h2>@Html.DisplayFor(modelitem => Model.Topic)</h2>
    
        @using (Html.BeginForm("Check", "Test", FormMethod.Post, new { id = "Form" }))
    {
        @Html.HiddenFor(model => model.Test_ID)
        @Html.HiddenFor(model => model.Student_ID)
        @Html.HiddenFor(model => model.Topic)
        @Html.HiddenFor(model => model.Questions.Count)
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.EditorFor(x => x.Questions)
       
            <input style=" color:green;width:150px;height:50px;margin-left:20%;border-radius:15px;background-color:dodgerblue; 
            border:1px solid silver; border: 1px solid #ccc;
            box-shadow: 20px -15px 10px 5px rgba(0, 0, 0, .2); " type="submit" />
       
  

    }
</div>
    
   
      
          
        <script>
    var dt = @Model.TimeForTest*60;

    function showRemaining() {
        dt--;
        if (dt < 0) {
            clearInterval(timer);
            document.getElementById('countdown').innerHTML = 'EXPIRED!';
            document.getElementById("Form").submit();

            return;
        }
        var minutes = Math.floor(dt / 60);
        var seconds = dt % 60;
        document.getElementById('countdown').innerHTML = minutes + ':';
        document.getElementById('countdown').innerHTML += seconds;
    }
    timer = setInterval(showRemaining, 1000);
        </script>
        }
